---
description: 
globs: 
alwaysApply: false
---
# Mermaid Diagram - User Journey

Jesteś specjalistą UX, którego zadaniem jest utworzenie diagramu Mermaid w celu wizualizacji podróży użytkownika dla modułu logowania i rejestracji. Diagram powinien zostać utworzony w następującym pliku: DESTINATION

Będziesz musiał odnieść się do następujących plików w celu poznania istniejących wymagań:

<file_references>
[project-prd.md](mdc:.ai/project-prd.md)
</file_references>

<destination>
.ai/diagrams/journey.md
</destination>

Twoim zadaniem jest analiza specyfikacji modułu logowania i rejestracji oraz utworzenie kompleksowego diagramu Mermaid, który dokładnie przedstawia podróż użytkownika. Diagram powinien być w języku polskim.

Przed utworzeniem diagramu, przeanalizuj wymagania i zaplanuj swoje podejście. Umieść swoją analizę wewnątrz tagów <user_journey_analysis>. W tej analizie:

1. Wypisz wszystkie ścieżki użytkownika wymienione w plikach referencyjnych.
2. Zidentyfikuj główne podróże i ich odpowiadające stany.
3. Określ punkty decyzyjne i alternatywne ścieżki.
4. Dostarcz krótki opis celu każdego stanu.

Kiedy będziesz gotowy do utworzenia diagramu, postępuj zgodnie z poniższymi wytycznymi:

1. Rozpocznij diagram od następującej składni:

   ```mermaid
   stateDiagram-v2
   ```

2. Uwzględnij następujące elementy w swoim diagramie:

   - Ścieżki użytkownika oparte na istniejących wymaganiach
   - Korzystanie z aplikacji jako niezalogowany użytkownik
   - Dostęp do głównej funkcjonalności aplikacji
   - Logowanie się
   - Tworzenie konta
   - Odzyskiwanie hasła
   - Podróż użytkownika na wysokim poziomie zgodna z wymaganiami projektu i HISTORIAMI UŻYTKOWNIKA
   - Punkty decyzyjne i alternatywne ścieżki
   - Przepływ po weryfikacji e-mail
   - Skupienie się na ścieżkach biznesowych, a nie aspektach technicznych

3. Przestrzegaj tych zasad składni Mermaid:

   - Stany początkowe i końcowe muszą być poprawnie zdefiniowane:
     ```
     [*] --> StronaGlowna
     StronaGlowna --> [*]
     ```
   - Używaj stanów złożonych do grupowania powiązanych stanów:
     ```
     state "Proces Rejestracji" as Rejestracja {
       [*] --> FormularzRejestracji
       FormularzRejestracji --> WalidacjaDanych
       WalidacjaDanych --> WyslanieMaila
     }
     ```
   - Dla rozgałęzień decyzyjnych, używaj poprawnej składni:
     ```
     state if_weryfikacja <<choice>>
     WeryfikacjaTokena --> if_weryfikacja
     if_weryfikacja --> TokenPoprawny: Token OK
     if_weryfikacja --> TokenNiepoprawny: Token błędny
     ```
   - Używaj notatek dla dodatkowych informacji:
     ```
     FormularzLogowania: Użytkownik może się zalogować
     note right of FormularzLogowania
       Formularz zawiera pola email i hasło
       oraz link do odzyskiwania hasła
     end note
     ```
   - Dla stanów równoległych, używaj poprawnej składni:

     ```
     state fork_state <<fork>>
     state join_state <<join>>

     Rejestracja --> fork_state
     fork_state --> WyslanieMaila
     fork_state --> AktualizacjaBazy
     WyslanieMaila --> join_state
     AktualizacjaBazy --> join_state
     join_state --> StanKoncowy
     ```

   - Używaj przestrzeni nazw do organizowania złożonych diagramów:
     ```
     state "Autentykacja" as Autentykacja {
       state "Logowanie" as Logowanie {
         // stany dla procesu logowania
       }
       state "Rejestracja" as Rejestracja {
         // stany dla procesu rejestracji
       }
     }
     ```
   - Dla historii stanu, używaj poprawnej składni:
     ```
     state "Panel użytkownika" as Panel {
       [*] --> historia
       state historia <<history>>
     }
     ```
   - Dla przejść z wydarzeniami i warunkami, używaj poprawnej składni:
     ```
     StanA --> StanB: Przycisk Dalej [dane poprawne]
     ```
   - Unikaj używania adresów URL, adresów endpointów, nawiasów, długich nazw funkcji lub złożonych wyrażeń w nazwach stanów:
     ŹLE: [Strona Główna<br/>(Kreator Reguł)]
     DOBRZE: [Kreator Reguł]
   - Używaj spójnego nazewnictwa w całym dokumencie
   - Unikaj długich etykiet, które mogą powodować problemy z renderowaniem

4. Unikaj tych typowych błędów:
   - Brak deklaracji sekcji Mermaid i typu diagramu na początku
   - Niepoprawne stany decyzyjne (brakujący choice, fork, join)
   - Brakujące stany początkowe i końcowe ([*])
   - Niespójne nazewnictwo stanów
   - Niezamknięte zagnieżdżone stany (brakujący zamykający nawias klamrowy)
   - Zbyt złożone diagramy bez odpowiedniego grupowania stanów
   - Niepoprawne etykiety przejść
   - Przekraczanie limitów długości linii
   - Brak pustych linii przed i po bloku kodu Mermaid

Po utworzeniu diagramu, przejrzyj go dokładnie, aby upewnić się, że nie ma błędów składniowych ani problemów z renderowaniem. Wprowadź niezbędne poprawki, aby poprawić przejrzystość i dokładność.

Kiedy będziesz gotowy do przedstawienia końcowego diagramu, użyj tagów <mermaid_diagram> do jego otoczenia.

<mermaid_diagram>
```mermaid
stateDiagram-v2
    direction LR
    [*] --> Niezalogowany

    state Niezalogowany {
        [*] --> EkranStartowy
        EkranStartowy: "/" - Nazwa aplikacji, opcje Logowania/Rejestracji
        note right of EkranStartowy
            US-000: Ekran Startowy
            Użytkownik widzi opcje:
            - Zaloguj się
            - Zarejestruj się
        end note

        EkranStartowy --> StronaLogowania: Klik "Zaloguj się"
        EkranStartowy --> StronaRejestracji: Klik "Zarejestruj się"

        state StronaLogowania {
            [*] --> FormularzLogowania
            FormularzLogowania: "/login" - Pola: e-mail, hasło
            note right of FormularzLogowania
                US-002: Logowanie
                - Pola na e-mail i hasło.
                - Link "Zapomniałeś hasła?".
                - Link "Nie masz konta? Zarejestruj się".
            end note
            FormularzLogowania --> WeryfikacjaKredensjali <<choice>> : Wpisano dane, klik "Zaloguj się"
            WeryfikacjaKredensjali --> Zalogowany_Dashboard : Dane poprawne
            WeryfikacjaKredensjali --> FormularzLogowania : Dane niepoprawne (komunikat błędu)
            FormularzLogowania --> StronaZapomnialemHasla : Klik "Zapomniałeś hasła?"
            FormularzLogowania --> StronaRejestracji : Klik "Nie masz konta? Zarejestruj się"
        }

        state StronaRejestracji {
            [*] --> FormularzRejestracji
            FormularzRejestracji: "/register" - Pola: e-mail, hasło, powtórz hasło
            note right of FormularzRejestracji
                US-001: Rejestracja
                - Pola na e-mail, hasło, potwierdzenie.
                - Wymagania dot. hasła (min. 7 znaków).
                - Link "Masz już konto? Zaloguj się".
            end note
            FormularzRejestracji --> WalidacjaDanychRejestracji <<choice>> : Wpisano dane, klik "Zarejestruj się"
            WalidacjaDanychRejestracji --> Zalogowany_Dashboard : Sukces (konto utworzone, auto-login)
            WalidacjaDanychRejestracji --> FormularzRejestracji : Błąd walidacji (np. email zajęty, hasło za krótkie, komunikat błędu)
            FormularzRejestracji --> StronaLogowania : Klik "Masz już konto? Zaloguj się"
        }

        state StronaZapomnialemHasla {
            [*] --> FormularzEmailDoResetu
            FormularzEmailDoResetu: "/forgot-password" - Pole: e-mail
            note right of FormularzEmailDoResetu
                US-010: Resetowanie hasła (Faza 1)
                - Formularz do wprowadzenia adresu e-mail.
                - Link "Wróć do logowania".
            end note
            FormularzEmailDoResetu --> KomunikatOWyslaniuInstrukcji : Klik "Wyślij link" (email wysłany)
            KomunikatOWyslaniuInstrukcji: Komunikat "Jeśli konto istnieje, wysłano instrukcję"
            KomunikatOWyslaniuInstrukcji --> StronaLogowania : Użytkownik wraca lub czeka na email
            FormularzEmailDoResetu --> StronaLogowania : Klik "Wróć do logowania"
            KomunikatOWyslaniuInstrukcji --> OczekiwanieNaEmailResetujacy
        }
        OczekiwanieNaEmailResetujacy --> StronaResetowaniaHasla : Użytkownik klika link w emailu

        state StronaResetowaniaHasla {
            [*] --> FormularzNowegoHasla
            FormularzNowegoHasla: "/reset-password/:token" - Pola: nowe hasło, powtórz nowe hasło
            note right of FormularzNowegoHasla
                US-010: Resetowanie hasła (Faza 2)
                - Wprowadzenie nowego hasła i potwierdzenia.
                - Walidacja hasła (min. 7 znaków).
            end note
            FormularzNowegoHasla --> WalidacjaTokenaIHasla <<choice>> : Klik "Ustaw nowe hasło"
            WalidacjaTokenaIHasla --> KomunikatOPoprawnejZmianieHasla : Sukces (hasło zmienione)
            WalidacjaTokenaIHasla --> FormularzNowegoHasla : Błąd (token, hasła niezgodne, za krótkie, komunikat błędu)
            KomunikatOPoprawnejZmianieHasla: Komunikat "Hasło zmienione, możesz się zalogować"
            KomunikatOPoprawnejZmianieHasla --> StronaLogowania
        }
    }

    state Zalogowany_Dashboard {
        note left of Zalogowany_Dashboard
            US-002a: Dostęp do Dashboardu
            Użytkownik jest na "/dashboard".
            Komunikat toast o pomyślnym logowaniu/rejestracji.
            Opcje nawigacyjne:
            - Generuj fiszki z AI
            - Stwórz fiszki manualnie
            - Moje zestawy fiszek
        end note
        Zalogowany_Dashboard --> DzialaniaWAplikacji : Nawigacja do funkcji
        DzialaniaWAplikacji : Stan reprezentujący korzystanie z funkcji aplikacji
        DzialaniaWAplikacji --> Zalogowany_Dashboard : Powrót do Dashboard
        Zalogowany_Dashboard --> MenuUzytkownika_Akcje
    }

    state MenuUzytkownika_Akcje {
         --> Wylogowanie : Klik "Wyloguj" w menu użytkownika
         --> DialogPotwierdzeniaUsunieciaKonta : Klik "Usuń konto" w menu użytkownika
    }
    Wylogowanie --> EkranStartowy : Użytkownik wylogowany
    DialogPotwierdzeniaUsunieciaKonta: Potwierdzenie usunięcia konta
    DialogPotwierdzeniaUsunieciaKonta --> EkranStartowy : Klik "Usuń" (konto usunięte)
    DialogPotwierdzeniaUsunieciaKonta --> Zalogowany_Dashboard : Klik "Anuluj"


    EkranStartowy --> [*]
    Zalogowany_Dashboard --> [*]

</mermaid_diagram>